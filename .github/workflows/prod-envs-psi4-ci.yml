---
# testing of psi4-containing production environments
# intended to check that a new psi4 pin doesn't break expectations for compute, before merging and deploying to production systems

name: CI - Prod Env psi4 Testing

on:
  pull_request:
    branches:
      - master
    paths:
      - 'devtools/prod-envs/**.yaml'
  push:
    branches:
      - master
    paths:
      - 'devtools/prod-envs/**.yaml'
  workflow_dispatch:

jobs:
  test-prod-env:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env-name:
          - qcarchive-worker-openff
          - qcarchive-worker-openff-ani
          - qcarchive-worker-openff-openmm
          - qcarchive-worker-openff-psi4
          - qcarchive-worker-openff-xtb
    env:
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt
    steps:
      - uses: actions/checkout@v2

      - name: Cache conda
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('devtools/prod-envs/${{ matrix.env-name }}.yaml') }}

      - name: Configure conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ${{ matrix.env-name }}
          environment-file: devtools/prod-envs/${{ matrix.env-name }}.yaml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
          auto-activate-base: false

      - name: Environment Information
        shell: bash -l {0}
        run: |
          conda info
          conda list

      - name: Make oe_license.txt file from GH org secret "OE_LICENSE"
        shell: bash
        env:
          OE_LICENSE_TEXT: ${{ secrets.OE_LICENSE }}
        run: |
          echo "${OE_LICENSE_TEXT}" > ${OE_LICENSE}

      #- name: Run qca-dataset-submission psi4 tests
      #  shell: bash -l {0}
      #  run: |
      #      conda install -c conda-forge pytest
      #      pytest ./devtools/tests/psi4/test_qcengine_psi4.py

      - name: Install openff-qcsubmit test dependencies
        shell: bash -l {0}
        run: |
            conda install -c conda-forge openff-qcsubmit requests-mock openff-fragmenter-base torsiondrive basis_set_exchange
            conda install -c openeye openeye-toolkits

      - name: Environment Information
        shell: bash -l {0}
        run: |
          conda info
          conda list

      - name: Run openff-qcsubmit tests
        shell: bash -l {0}
        run: |
            QCSUBMIT_TESTDIR=$(dirname $(python -c "import openff.qcsubmit.tests as tests; print(tests.__file__)"))
            pytest $QCSUBMIT_TESTDIR

