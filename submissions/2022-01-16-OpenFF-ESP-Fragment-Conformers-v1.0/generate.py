import pickle

from openff.qcsubmit.datasets import BasicDataset
from openff.qcsubmit.factories import BasicDatasetFactory
from openff.toolkit.topology import Molecule
from openff.toolkit.utils import OpenEyeToolkitWrapper
from qcelemental.models.results import WavefunctionProtocolEnum
from tqdm import tqdm


def main():

    # Generate the data set to submit. We build a dataset directly as the unique
    # checks fail at the isomorphism check stage...
    dataset_factory = BasicDatasetFactory()

    dataset = BasicDataset(
        dataset_name="OpenFF BCC Refit Study COH v1.0",
        dataset_tagline="HF/6-31G* conformers of diverse fragments.",
        description="A dataset that contains a diverse set of fragments generated from "
        "the Enamine 10K and 50K diversity libraries, the curated ZINC and ChEMBL "
        "(eps=78) molecules provided by Riniker and Bleiziffer and the `OpenFF Industry "
        "Benchmark Season 1 Public` molecule set."
        "\n\n"
        "The fragments were generated using the `Recap` decomposition scheme built in to "
        "`RDKit`\n\n"
        "For each of the generated fragments a set of up to five conformers were "
        "generated by:\n\n"
        "   * generating a set of up to 500 conformers with an RMS cutoff of 0.5 Ã… "
        "using the OpenEye backend of the OpenFF toolkit\n"
        "   * applying ELF conformer selection retaining only 5 conformers using the "
        "OpenEye backend of the OpenFF toolkit\n"
        "   * minimizing each conformer using psi4 and HF/6-31G* until the `GAU_LOOSE` "
        "convergence criteria have been met by `geometric`\n"
        "\n"
        "The expectation is that the electrostatic potential and electric field can be "
        "computed using the wavefunction stored in this dataset and using which new "
        "charge models can be trained."
        "\n\n"
        "See the `gnn-charge-models` repository, and particularly the "
        "`data-set-curation` directory for further details.",
    )
    dataset.add_qc_spec(
        program="psi4",
        method="hf",
        basis="6-31G*",
        spec_name="HF/6-31G*",
        spec_description=(
            "The standard HF/6-31G* basis used to derive RESP style charges."
        ),
        store_wavefunction=WavefunctionProtocolEnum.orbitals_and_eigenvalues
    )

    with open("esp-fragment-set-complete.pkl", "rb") as file:
        conformer_set = pickle.load(file)

    for smiles, conformers in tqdm(conformer_set):

        molecule = Molecule.from_smiles(
            smiles,
            allow_undefined_stereo=True,
            toolkit_registry=OpenEyeToolkitWrapper()
        )
        molecule._conformers = conformers

        dataset.add_molecule(dataset_factory.create_index(molecule=molecule), molecule)

    # Correct the dataset metadata.
    dataset.metadata.submitter = "simonboothroyd"
    dataset.metadata.long_description_url = (
        "https://github.com/openforcefield/qca-dataset-submission/tree/master/"
        "submissions/"
        "2022-01-16-OpenFF-ESP-Fragment-Conformers-v1.0"
    )

    # Export the data set.
    dataset.export_dataset("dataset.json.xz")
    dataset.molecules_to_file('dataset.smi', 'smi')

    dataset.visualize("dataset.pdf", columns=8)


if __name__ == '__main__':
    main()
